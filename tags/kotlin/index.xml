<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>kotlin on Soul Mate</title><link>https://crazygit.wiseturtles.com/tags/kotlin/</link><description>Recent content in kotlin on Soul Mate</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 14 Jul 2021 10:10:54 +0800</lastBuildDate><atom:link href="https://crazygit.wiseturtles.com/tags/kotlin/index.xml" rel="self" type="application/rss+xml"/><item><title>Kotlin中的作用域函数</title><link>https://crazygit.wiseturtles.com/2021/07/14/011-kotlin-scope-function/</link><pubDate>Wed, 14 Jul 2021 10:10:54 +0800</pubDate><guid>https://crazygit.wiseturtles.com/2021/07/14/011-kotlin-scope-function/</guid><description>Scope functions let let既不是操作符,也不是什么关键字,而是一个函数。这个函数提供了函数式API的编程接口，并将原始调用对象作为参数传递到Lambda表</description></item><item><title>Kotlin集合的基本操作01</title><link>https://crazygit.wiseturtles.com/2021/06/30/009-kotlin-collections-01/</link><pubDate>Wed, 30 Jun 2021 10:11:29 +0800</pubDate><guid>https://crazygit.wiseturtles.com/2021/06/30/009-kotlin-collections-01/</guid><description>标准库中的集合类 kotlin库中的集合关系图(注意Map并不属于Collection的子类) Kotlin集合类中主要有三种类型 List：有序</description></item><item><title>Kotlin基本语法05</title><link>https://crazygit.wiseturtles.com/2021/06/21/008-kotlin-basic-synatx-05/</link><pubDate>Mon, 21 Jun 2021 10:11:29 +0800</pubDate><guid>https://crazygit.wiseturtles.com/2021/06/21/008-kotlin-basic-synatx-05/</guid><description>类委托和委托属性 委托是一种设计模式，它的基本理念是:操作对象自己不会去处理某段逻辑，而是会把工作委托给另外一个辅助对象去处理。 类委托 类委托的</description></item><item><title>Kotlin基本语法04</title><link>https://crazygit.wiseturtles.com/2021/06/15/007-kotlin-basic-synatx-04/</link><pubDate>Tue, 15 Jun 2021 10:11:29 +0800</pubDate><guid>https://crazygit.wiseturtles.com/2021/06/15/007-kotlin-basic-synatx-04/</guid><description>密封类sealed class 密封类的具体作用如下: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // 定义一个空接口 interface Result class Success(val msg: String) : Result class Failure(val error: Exception) : Result fun getResultMsg(result: Result) = when (result) { is Success -&amp;gt; result.msg is Failure</description></item><item><title>Kotlin基本语法03</title><link>https://crazygit.wiseturtles.com/2021/06/07/006-kotlin-basic-synatx-03/</link><pubDate>Mon, 07 Jun 2021 11:17:29 +0800</pubDate><guid>https://crazygit.wiseturtles.com/2021/06/07/006-kotlin-basic-synatx-03/</guid><description>面向对象编程01 类 与Java一样，Kotlin中使用class关键字来声明类, 例如 1 class Person { /*...*/ } 当一个类不包含任何属性和方法时，可以简写为 1 class</description></item><item><title>Kotlin基本语法02</title><link>https://crazygit.wiseturtles.com/2021/06/02/005-kotlin-basic-synatx-02/</link><pubDate>Wed, 02 Jun 2021 11:00:29 +0800</pubDate><guid>https://crazygit.wiseturtles.com/2021/06/02/005-kotlin-basic-synatx-02/</guid><description>Lambda表达式和高阶函数 在Kotlin当中，函数可以像普通变量一样作为参数传递或者作为返回值返回。 Lambda定义 Lambda就是一段可</description></item><item><title>Kotlin基本语法01</title><link>https://crazygit.wiseturtles.com/2021/05/31/004-kotlin-basic-synatx-01/</link><pubDate>Mon, 31 May 2021 10:25:29 +0800</pubDate><guid>https://crazygit.wiseturtles.com/2021/05/31/004-kotlin-basic-synatx-01/</guid><description>语言特点 Kotlin可以编译成Java字节码，也可以编译成JavaScript字节码，方便在没有JVM的设备上运行。 基本语法 Kotlin语言</description></item><item><title>Kotlin基本数据类型</title><link>https://crazygit.wiseturtles.com/2021/05/28/003-kotlin-basic-types/</link><pubDate>Fri, 28 May 2021 11:50:29 +0800</pubDate><guid>https://crazygit.wiseturtles.com/2021/05/28/003-kotlin-basic-types/</guid><description>在Kotlin语言中，一切皆对象。因此，我们可以调用任意类型变量的属性或方法。比如 1 2 3 4 // {}是一个空的Lamba表达式，我们也可以通过它</description></item><item><title>Kotlin开发环境搭建</title><link>https://crazygit.wiseturtles.com/2021/05/26/002-kotlin-development-env-setup/</link><pubDate>Wed, 26 May 2021 13:50:29 +0800</pubDate><guid>https://crazygit.wiseturtles.com/2021/05/26/002-kotlin-development-env-setup/</guid><description>kotlin的使用非常方便，只需要下载IntelliJ Idea 或者Android Studio,安装好之后默认就可以直接使用kotlin语言进行开发</description></item><item><title>Kotlin学习资料整理</title><link>https://crazygit.wiseturtles.com/2021/05/26/001-kotlin-learning-materials/</link><pubDate>Wed, 26 May 2021 13:48:29 +0800</pubDate><guid>https://crazygit.wiseturtles.com/2021/05/26/001-kotlin-learning-materials/</guid><description>快速入门指南 介绍了使用kotlin在各种场景下的开发环境搭建过程，如配合各种IDE使用Kotlin, 混合Java开发， 以及结合Javascr</description></item><item><title>Kotlin集合的基本操作02</title><link>https://crazygit.wiseturtles.com/1/01/01/010-kotlin-collections-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://crazygit.wiseturtles.com/1/01/01/010-kotlin-collections-02/</guid><description>集合部分元素截取 slice() 根据参数中指定的下表返回集合，参数既可以是range, 也可以是整形的集合 1 2 3 4 val numbers = listOf(&amp;#34;one&amp;#34;, &amp;#34;two&amp;#34;, &amp;#34;three&amp;#34;, &amp;#34;four&amp;#34;, &amp;#34;five&amp;#34;, &amp;#34;six&amp;#34;) println(numbers.slice(1..3)) // [two, three, four] println(numbers.slice(0..4 step 2)) // [one, three, five]</description></item></channel></rss>