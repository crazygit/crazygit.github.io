<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Soul Mate</title><link>https://crazygit.wiseturtles.com/post/</link><description>Recent content in Posts on Soul Mate</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 14 Jul 2021 10:10:54 +0800</lastBuildDate><atom:link href="https://crazygit.wiseturtles.com/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Kotlin中的作用域函数</title><link>https://crazygit.wiseturtles.com/2021/07/14/011-kotlin-scope-function/</link><pubDate>Wed, 14 Jul 2021 10:10:54 +0800</pubDate><guid>https://crazygit.wiseturtles.com/2021/07/14/011-kotlin-scope-function/</guid><description>Scope functions let let既不是操作符,也不是什么关键字,而是一个函数。这个函数提供了函数式API的编程接口，并将原始调用对象作为参数传递到Lambda表</description></item><item><title>Jetpack简介</title><link>https://crazygit.wiseturtles.com/2021/06/30/android-jetpack-overview/</link><pubDate>Wed, 30 Jun 2021 14:34:52 +0800</pubDate><guid>https://crazygit.wiseturtles.com/2021/06/30/android-jetpack-overview/</guid><description>概述 Jetpack 是一套库、工具和指南，可帮助开发者更轻松地编写优质应用。这些组件可帮助您遵循最佳做法、让您摆脱编写样板代码的工作并简化复杂任务，以便您</description></item><item><title>Kotlin集合的基本操作01</title><link>https://crazygit.wiseturtles.com/2021/06/30/009-kotlin-collections-01/</link><pubDate>Wed, 30 Jun 2021 10:11:29 +0800</pubDate><guid>https://crazygit.wiseturtles.com/2021/06/30/009-kotlin-collections-01/</guid><description>标准库中的集合类 kotlin库中的集合关系图(注意Map并不属于Collection的子类) Kotlin集合类中主要有三种类型 List：有序</description></item><item><title>Kotlin基本语法05</title><link>https://crazygit.wiseturtles.com/2021/06/21/008-kotlin-basic-synatx-05/</link><pubDate>Mon, 21 Jun 2021 10:11:29 +0800</pubDate><guid>https://crazygit.wiseturtles.com/2021/06/21/008-kotlin-basic-synatx-05/</guid><description>类委托和委托属性 委托是一种设计模式，它的基本理念是:操作对象自己不会去处理某段逻辑，而是会把工作委托给另外一个辅助对象去处理。 类委托 类委托的</description></item><item><title>Kotlin基本语法04</title><link>https://crazygit.wiseturtles.com/2021/06/15/007-kotlin-basic-synatx-04/</link><pubDate>Tue, 15 Jun 2021 10:11:29 +0800</pubDate><guid>https://crazygit.wiseturtles.com/2021/06/15/007-kotlin-basic-synatx-04/</guid><description>密封类sealed class 密封类的具体作用如下: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // 定义一个空接口 interface Result class Success(val msg: String) : Result class Failure(val error: Exception) : Result fun getResultMsg(result: Result) = when (result) { is Success -&amp;gt; result.msg is Failure</description></item><item><title>Kotlin基本语法03</title><link>https://crazygit.wiseturtles.com/2021/06/07/006-kotlin-basic-synatx-03/</link><pubDate>Mon, 07 Jun 2021 11:17:29 +0800</pubDate><guid>https://crazygit.wiseturtles.com/2021/06/07/006-kotlin-basic-synatx-03/</guid><description>面向对象编程01 类 与Java一样，Kotlin中使用class关键字来声明类, 例如 1 class Person { /*...*/ } 当一个类不包含任何属性和方法时，可以简写为 1 class</description></item><item><title>Kotlin基本语法02</title><link>https://crazygit.wiseturtles.com/2021/06/02/005-kotlin-basic-synatx-02/</link><pubDate>Wed, 02 Jun 2021 11:00:29 +0800</pubDate><guid>https://crazygit.wiseturtles.com/2021/06/02/005-kotlin-basic-synatx-02/</guid><description>Lambda表达式和高阶函数 在Kotlin当中，函数可以像普通变量一样作为参数传递或者作为返回值返回。 Lambda定义 Lambda就是一段可</description></item><item><title>Kotlin基本语法01</title><link>https://crazygit.wiseturtles.com/2021/05/31/004-kotlin-basic-synatx-01/</link><pubDate>Mon, 31 May 2021 10:25:29 +0800</pubDate><guid>https://crazygit.wiseturtles.com/2021/05/31/004-kotlin-basic-synatx-01/</guid><description>语言特点 Kotlin可以编译成Java字节码，也可以编译成JavaScript字节码，方便在没有JVM的设备上运行。 基本语法 Kotlin语言</description></item><item><title>Kotlin基本数据类型</title><link>https://crazygit.wiseturtles.com/2021/05/28/003-kotlin-basic-types/</link><pubDate>Fri, 28 May 2021 11:50:29 +0800</pubDate><guid>https://crazygit.wiseturtles.com/2021/05/28/003-kotlin-basic-types/</guid><description>在Kotlin语言中，一切皆对象。因此，我们可以调用任意类型变量的属性或方法。比如 1 2 3 4 // {}是一个空的Lamba表达式，我们也可以通过它</description></item><item><title>Kotlin开发环境搭建</title><link>https://crazygit.wiseturtles.com/2021/05/26/002-kotlin-development-env-setup/</link><pubDate>Wed, 26 May 2021 13:50:29 +0800</pubDate><guid>https://crazygit.wiseturtles.com/2021/05/26/002-kotlin-development-env-setup/</guid><description>kotlin的使用非常方便，只需要下载IntelliJ Idea 或者Android Studio,安装好之后默认就可以直接使用kotlin语言进行开发</description></item><item><title>Kotlin学习资料整理</title><link>https://crazygit.wiseturtles.com/2021/05/26/001-kotlin-learning-materials/</link><pubDate>Wed, 26 May 2021 13:48:29 +0800</pubDate><guid>https://crazygit.wiseturtles.com/2021/05/26/001-kotlin-learning-materials/</guid><description>快速入门指南 介绍了使用kotlin在各种场景下的开发环境搭建过程，如配合各种IDE使用Kotlin, 混合Java开发， 以及结合Javascr</description></item><item><title>fluentd教程(含实例)</title><link>https://crazygit.wiseturtles.com/2019/11/29/fluentd-tutorial/</link><pubDate>Fri, 29 Nov 2019 15:29:29 +0800</pubDate><guid>https://crazygit.wiseturtles.com/2019/11/29/fluentd-tutorial/</guid><description>&lt;p>fluentd是一个开源的日志收集系统，能够收集各式各样的日志, 并将日志转换成方便机器处理的json格式。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/crazygit/static@main/img/1574818088.png" alt="fluentd日志架构">&lt;/p></description></item><item><title>Java实用第三方库之Lombok使用入门</title><link>https://crazygit.wiseturtles.com/2019/09/18/java-libraries-lombok/</link><pubDate>Wed, 18 Sep 2019 10:44:29 +0800</pubDate><guid>https://crazygit.wiseturtles.com/2019/09/18/java-libraries-lombok/</guid><description>&lt;p>平时定义类时，难免会写很多&lt;code>Getter&lt;/code>, &lt;code>Setter&lt;/code>，&lt;code>toString&lt;/code>, &lt;code>Constructor &lt;/code>等方法。虽然可以用IDE自带的代码生成，但是生成的代码仍然很多，看起来特别臃肿。有了&lt;a href="https://projectlombok.org">&lt;code>Lombok&lt;/code>&lt;/a>这个库，用一个注解就能自动搞定这个问题。&lt;/p></description></item><item><title>流程控制和函数</title><link>https://crazygit.wiseturtles.com/2019/01/07/control-flow-and-functions/</link><pubDate>Mon, 07 Jan 2019 15:19:54 +0800</pubDate><guid>https://crazygit.wiseturtles.com/2019/01/07/control-flow-and-functions/</guid><description>&lt;h2 id="流程控制">流程控制&lt;/h2>
&lt;p>流程控制的关键字&lt;/p>
&lt;ul>
&lt;li>&lt;code>while&lt;/code>&lt;/li>
&lt;li>&lt;code>if&lt;/code>&lt;/li>
&lt;li>&lt;code>guard&lt;/code>&lt;/li>
&lt;li>&lt;code>switch&lt;/code>&lt;/li>
&lt;li>&lt;code>for-in&lt;/code>&lt;/li>
&lt;li>&lt;code>continue&lt;/code>&lt;/li>
&lt;li>&lt;code>break&lt;/code>&lt;/li>
&lt;/ul></description></item><item><title>集合类型</title><link>https://crazygit.wiseturtles.com/2018/12/26/collection-types/</link><pubDate>Wed, 26 Dec 2018 23:11:51 +0800</pubDate><guid>https://crazygit.wiseturtles.com/2018/12/26/collection-types/</guid><description>&lt;p>Swift有三种主要的集合类型，分别是:&lt;/p>
&lt;ul>
&lt;li>Arrays&lt;/li>
&lt;li>Sets&lt;/li>
&lt;li>dictionaries&lt;/li>
&lt;/ul></description></item><item><title>Swift基本运算符</title><link>https://crazygit.wiseturtles.com/2018/12/03/basic-operators/</link><pubDate>Mon, 03 Dec 2018 12:01:55 +0800</pubDate><guid>https://crazygit.wiseturtles.com/2018/12/03/basic-operators/</guid><description>&lt;h3 id="比较运算符">比较运算符&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Swift中提供了检查两个对象是否同引用同一个示例的操作符&lt;code>===&lt;/code>和&lt;code>!==&lt;/code>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>当两个元祖有相同的元素类型和个数时，可以直接比较两个元祖。从左到右，直到找到不相等的。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-swift" data-lang="swift">(&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;zebra&amp;#34;&lt;/span>) &lt;span style="color:#f92672">&amp;lt;&lt;/span> (&lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;apple&amp;#34;&lt;/span>) &lt;span style="color:#75715e">// true because 1 is less than 2; &amp;#34;zebra&amp;#34; and &amp;#34;apple&amp;#34; are not compared&lt;/span>
(&lt;span style="color:#ae81ff">3&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;apple&amp;#34;&lt;/span>) &lt;span style="color:#f92672">&amp;lt;&lt;/span> (&lt;span style="color:#ae81ff">3&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;bird&amp;#34;&lt;/span>) &lt;span style="color:#75715e">// true because 3 is equal to 3, and &amp;#34;apple&amp;#34; is less than &amp;#34;bird&amp;#34;&lt;/span>
(&lt;span style="color:#ae81ff">4&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;dog&amp;#34;&lt;/span>) == (&lt;span style="color:#ae81ff">4&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;dog&amp;#34;&lt;/span>) &lt;span style="color:#75715e">// true because 4 is equal to 4, and &amp;#34;dog&amp;#34; is equal to &amp;#34;dog”&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Swift基本语法</title><link>https://crazygit.wiseturtles.com/2018/10/30/swfit-the-basics/</link><pubDate>Tue, 30 Oct 2018 11:58:55 +0800</pubDate><guid>https://crazygit.wiseturtles.com/2018/10/30/swfit-the-basics/</guid><description>&lt;h3 id="常量和变量">常量和变量&lt;/h3>
&lt;p>一次声明多个变量&lt;/p>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-swift" data-lang="swift">&lt;span style="color:#66d9ef">var&lt;/span> x = &lt;span style="color:#ae81ff">0.0&lt;/span>, y = &lt;span style="color:#ae81ff">0.0&lt;/span>, z = &lt;span style="color:#ae81ff">0.0&lt;/span>
&lt;span style="color:#66d9ef">var&lt;/span> red, green, blue: Double
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Developing iOS 11 Apps with Swift视频下载</title><link>https://crazygit.wiseturtles.com/2018/10/29/developing_ios11_apps_with_swift/</link><pubDate>Mon, 29 Oct 2018 16:15:15 +0800</pubDate><guid>https://crazygit.wiseturtles.com/2018/10/29/developing_ios11_apps_with_swift/</guid><description>&lt;p>从Mac版的iTunes里找到课程，通过分享链接，获取下面的地址，
其实就是一个xml文件&lt;/p>
&lt;p>&lt;a href="http://podcasts.apple.com/stanford/developing_ios11_apps.xml">iTunes podcasts 视频解析地址&lt;/a>&lt;/p>
&lt;p>解析出所有的下载地址&lt;/p>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#f92672">import&lt;/span> xml.etree.ElementTree &lt;span style="color:#f92672">as&lt;/span> ET
&lt;span style="color:#f92672">import&lt;/span> requests
root &lt;span style="color:#f92672">=&lt;/span> ET&lt;span style="color:#f92672">.&lt;/span>fromstring(requests&lt;span style="color:#f92672">.&lt;/span>get(&lt;span style="color:#e6db74">&amp;#39;http://podcasts.apple.com/stanford/developing_ios11_apps.xml&amp;#39;&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>text)
&lt;span style="color:#66d9ef">for&lt;/span> enclosure &lt;span style="color:#f92672">in&lt;/span> root&lt;span style="color:#f92672">.&lt;/span>findall(&lt;span style="color:#e6db74">&amp;#39;.//enclosure&amp;#39;&lt;/span>):
&lt;span style="color:#66d9ef">print&lt;/span>(enclosure&lt;span style="color:#f92672">.&lt;/span>get(&lt;span style="color:#e6db74">&amp;#39;url&amp;#39;&lt;/span>))
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Swift入门指南二</title><link>https://crazygit.wiseturtles.com/2018/10/27/swift-tour-002/</link><pubDate>Sat, 27 Oct 2018 22:55:22 +0800</pubDate><guid>https://crazygit.wiseturtles.com/2018/10/27/swift-tour-002/</guid><description>&lt;h2 id="对象和类">对象和类&lt;/h2>
&lt;p>创建类&lt;/p>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-swift" data-lang="swift">&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Shape&lt;/span> {
&lt;span style="color:#66d9ef">var&lt;/span> numberOfSides = &lt;span style="color:#ae81ff">0&lt;/span>
&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">simpleDescription&lt;/span>() -&amp;gt; String {
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#e6db74">&amp;#34;A shape with &lt;/span>&lt;span style="color:#e6db74">\(&lt;/span>numberOfSides&lt;span style="color:#e6db74">)&lt;/span>&lt;span style="color:#e6db74"> sides.&amp;#34;&lt;/span>
}
}
&lt;span style="color:#66d9ef">var&lt;/span> shape = Shape()
shape.numberOfSides = &lt;span style="color:#ae81ff">7&lt;/span>
&lt;span style="color:#66d9ef">var&lt;/span> shapeDescription = shape.simpleDescription()
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Swift入门指南一</title><link>https://crazygit.wiseturtles.com/2018/10/27/swift-tour-001/</link><pubDate>Sat, 27 Oct 2018 09:34:03 +0800</pubDate><guid>https://crazygit.wiseturtles.com/2018/10/27/swift-tour-001/</guid><description>&lt;h2 id="hello-world">Hello World&lt;/h2>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-swift" data-lang="swift">print(&lt;span style="color:#e6db74">&amp;#34;Hello, world!&amp;#34;&lt;/span>)
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>“Hello world”的写法与&lt;code>python&lt;/code>的语法, 不需要分号结尾&lt;/p></description></item></channel></rss>